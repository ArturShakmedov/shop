from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from database import *


def send_contact_button():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    buttons_1 = KeyboardButton(text='–ü–æ–¥–µ–ª–∏—Ç—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º', request_contact=True)
    markup.row(buttons_1)
    return markup


# def quantity_image():
#     markup = ReplyKeyboardMarkup(resize_keyboard=True)
#     buttons_1 = KeyboardButton(text='1Ô∏è‚É£')
#     buttons_2 = KeyboardButton(text='2Ô∏è‚É£')
#     buttons_3 = KeyboardButton(text='3Ô∏è‚É£')
#     buttons_4 = KeyboardButton(text='4Ô∏è‚É£')
#     buttons_5 = KeyboardButton(text='5Ô∏è‚É£')
#     buttons_6 = KeyboardButton(text='6Ô∏è‚É£')
#     buttons_7 = KeyboardButton(text='7Ô∏è‚É£')
#     buttons_8 = KeyboardButton(text='8Ô∏è‚É£')
#     buttons_9 = KeyboardButton(text='9Ô∏è‚É£')
#     buttons_10 = KeyboardButton(text='üîü')
#     markup.row(buttons_1, buttons_2, buttons_3)
#     markup.row(buttons_4, buttons_5, buttons_6)
#     markup.row(buttons_7, buttons_8, buttons_9)
#     markup.row(buttons_10)
#     return markup


# def adin_main_menu():
#     markup = ReplyKeyboardMarkup(resize_keyboard=True)
#     buttons_1 = KeyboardButton(text='–ú–µ–Ω—É')
#     buttons_2 = KeyboardButton(text='–ö–∞—Ç–∞–ª–æ–≥')
#     buttons_3 = KeyboardButton(text='–°–∫–∏–¥–∫–∏')
#     buttons_4 = KeyboardButton(text='–ö–∞—Ä–∑–∏–Ω–∞')
#     buttons_5 = KeyboardButton(text='–ò—Å—Ç–æ—Ä–∏—è')
#     buttons_6 = KeyboardButton(text='–î–æ–±–∞–≤–∏—Ç –¢–æ–≤–∞—Ä')
#     buttons_7 = KeyboardButton(text='–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä')
#     markup.row(buttons_1)
#     markup.row(buttons_2, buttons_3)
#     markup.row(buttons_4, buttons_5)
#     markup.row(buttons_5, buttons_6)
#     return markup


def generate_main_menu():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    buttons_1 = KeyboardButton(text='–º–µ–Ω—é üîÑ')
    buttons_2 = KeyboardButton(text='–ö–∞—Ç–∞–ª–æ–≥')
    buttons_3 = KeyboardButton(text='—Å–∫–∏–¥–∫–∏ üéÅ')
    buttons_4 = KeyboardButton(text='–ö–∞—Ä–∑–∏–Ω–∞ üß∫')
    buttons_5 = KeyboardButton(text='–ò—Å—Ç–æ—Ä–∏—è')
    markup.row(buttons_1)
    markup.row(buttons_2, buttons_3)
    markup.row(buttons_4, buttons_5)
    return markup


def generate_category_menu_admin():
    markup = InlineKeyboardMarkup(row_width=2)
    categories = get_all_categories()
    buttons = []
    for category in categories:
        btn = InlineKeyboardButton(text=category[1], callback_data=f'category_{category[0]}')
        buttons.append(btn)
    markup.row(InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', callback_data='add_categories'),
               InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', callback_data='delete_categories'))
    markup.add(*buttons)
    return markup


def generate_category_menu():
    markup = InlineKeyboardMarkup(row_width=2)
    categories = get_all_categories()
    buttons = []
    for category in categories:
        btn = InlineKeyboardButton(text=category[1], callback_data=f'category_{category[0]}')
        buttons.append(btn)
    markup.add(*buttons)
    return markup


def generate_products_by_category_admin(category_id):
    markup = InlineKeyboardMarkup(row_width=2)
    products = get_products_by_category_id(category_id)
    button = []
    for product in products:
        btn = InlineKeyboardButton(text=product[1], callback_data=f'product_{product[0]}')
        button.append(btn)

    markup.add(*button)
    markup.row(InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç', callback_data=f'add_tovar_{category_id}'),
               InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç', callback_data=f'delete_tovar_{category_id}'))
    markup.row(
        InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back'),
        InlineKeyboardButton(text='–ú–µ–Ω—é', callback_data='main_menu'),
        InlineKeyboardButton(text='–î–∞–ª–µ–µ', callback_data='next')
    )
    return markup


def generate_products_by_category(category_id):
    markup = InlineKeyboardMarkup(row_width=2)
    products = get_products_by_category_id(category_id)
    button = []
    for product in products:
        btn = InlineKeyboardButton(text=product[1], callback_data=f'product_{product[0]}')
        button.append(btn)
    markup.add(*button)
    markup.row(
        InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back'),
        InlineKeyboardButton(text='–ú–µ–Ω—é', callback_data='main_menu'),
        InlineKeyboardButton(text='–î–∞–ª–µ–µ', callback_data='next')
    )
    return markup


def generate_product_detail_menu(product_id, category_id, cart_id, product_name='', c=0):
    markup = InlineKeyboardMarkup(row_width=3)
    try:
        quantity = get_quantity(cart_id, product_name)
    except:
        quantity = c

    buttons = []
    btn_back = InlineKeyboardButton(text=str('–ù–∞–∑–∞–¥'), callback_data=f'back_{quantity}_{product_id}')
    btn_quantity = InlineKeyboardButton(text=str(quantity), callback_data=f'coll')
    btn_next = InlineKeyboardButton(text=str('–î–∞–ª–µ–µ'), callback_data=f'next_{quantity}_{product_id}')
    buttons.append(btn_back)
    buttons.append(btn_quantity)
    buttons.append(btn_next)
    markup.add(*buttons)
    markup.row(
        InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É', callback_data=f'cart_{product_id}_{quantity}')
    )
    markup.row(
        InlineKeyboardButton(text='–ú–µ–Ω—é', callback_data=f'menu_{category_id}')
    )
    return markup


def generate_cart_menu(cart_id):
    markup = InlineKeyboardMarkup()
    markup.row(
        InlineKeyboardButton(text='–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', callback_data=f'order_{cart_id}')
    )
    cart_products = get_carts_products_for_delete(cart_id)
    for cart_product_id, product_name in cart_products:
        markup.row(
            InlineKeyboardButton(text=f'–£–¥–∞–ª–∏—Ç—å {product_name}', callback_data=f'delete_{cart_product_id}')
        )
    return markup
